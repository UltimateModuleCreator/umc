<?php{{ module.getFormattedLicense('php') }}
namespace {{ module.getNamespace() }}\{{ module.getModuleName() }}\Setup;

use Magento\Framework\App\ResourceConnection;
use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\Setup\SchemaSetupInterface;
use Magento\Framework\Setup\UninstallInterface;

class Uninstall implements UninstallInterface
{
    /**
     * @var ResourceConnection
     */
    private $resource;

    /**
     * Uninstall constructor.
     * @param ResourceConnection $resource
     */
    public function __construct(ResourceConnection $resource)
    {
        $this->resource = $resource;
    }

    /**
     * {@inheritdoc}
     * @SuppressWarnings(PHPMD.Generic.CodeAnalysis.UnusedFunctionParameter)
     */
    public function uninstall(
        SchemaSetupInterface $setup,
        ModuleContextInterface $context
    ) {
        //remove ui bookmark data
        $this->resource->getConnection()->delete(
            $this->resource->getTableName('ui_bookmark'),
            [
                'namespace IN (?)' => [
{% for entity in module.getEntities() %}
                    '{{ module.getNamespace()|snake }}_{{ module.getModuleName()|lower }}_{{ entity.getNameSingular()|lower }}_listing',
{% endfor %}
                ]
            ]
        );
{% if module.hasFrontend() %}
        //remove config data
        $this->resource->getConnection()->delete(
            $this->resource->getTableName('core_config_data'),
            [
                'path LIKE ?' => '{{ module.getNamespace()|snake }}_{{ module.getModuleName()|snake }}_%'
            ]
        );
{% endif %}
{% for entity in module.getEntities() %}
{% if entity.getStore() %}
        if ($setup->tableExists('{{ module.getNamespace()|snake }}_{{ module.getModuleName()|snake }}_{{ entity.getNameSingular()|snake }}_store')) {
            $setup->getConnection()->dropTable{{ entity.getNameSingular()|ucfirst }}StoreTable($setup);
        }
{% endif %}
        if ($setup->tableExists('{{ module.getNamespace()|snake }}_{{ module.getModuleName()|snake }}_{{ entity.getNameSingular()|snake }}')) {
            $setup->getConnection()->dropTable('{{ module.getNamespace()|snake }}_{{ module.getModuleName()|snake }}_{{ entity.getNameSingular()|snake }}');
        }
{% endfor %}
    }
}
