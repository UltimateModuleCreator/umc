{% if module.hasTopMenu() %}
<?php{{ module.getFormattedLicense('php') }}

namespace {{ module.getNamespace() }}\{{ module.getModuleName() }}\Plugin\Block;

use Magento\Framework\App\Request\Http;
use Magento\Framework\Data\Tree\Node;
use Magento\Theme\Block\Html\Topmenu as TopmenuBlock;

class TopmenuPlugin
{
    /**
     * @var Http
     */
    private $request;
    /**
     * @var array
     */
    private $entities;

    /**
     * TopmenuPlugin constructor.
     * @param Http $request
     * @param array $entities
     */
    public function __construct(
        Http $request,
        array $entities
    ) {
        $this->request  = $request;
        $this->entities = $entities;
    }
    /**
     * @param TopmenuBlock $subject
     * @param string $outermostClass
     * @param string $childrenWrapClass
     * @param int $limit
     * @SuppressWarnings("PMD.UnusedFormalParameter")
     */
    public function beforeGetHtml(
        TopmenuBlock $subject,
        $outermostClass = '',
        $childrenWrapClass = '',
        $limit = 0
    ) {
        foreach ($this->entities as $entity) {
            $nodeData = $this->getNodeAsArray($entity);
            if ($nodeData) {
                $node = new Node(
                    $nodeData,
                    'id',
                    $subject->getMenu()->getTree(),
                    $subject->getMenu()
                );
                $subject->getMenu()->addChild($node);
            }
        }
    }
    /**
     * @return array
     */
    protected function getNodeAsArray($entity)
    {
        if (!isset($entity['label'])) {
            return null;
        }
        if (!isset($entity['url_model']) || !is_callable([$entity['url_model'], 'getListUrl'])) {
            return null;
        }
        if (!isset($entity['node_id'])) {
            return null;
        }
        $activeHandles = $entity['active_handles'] ?? [];
        return [
            'name' => $entity['label'],
            'id' => $entity['node_id'],
            'url' => $entity['url_model']->getListUrl(),
            'has_active' => false,
            'is_active' => in_array($this->request->getFullActionName(), $activeHandles)
        ];
    }
}
{% endif %}
