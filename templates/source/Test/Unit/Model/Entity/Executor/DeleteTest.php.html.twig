<?php{{ module.getFormattedLicense('php') }}
namespace {{ module.getNamespace() }}\{{ module.getModuleName() }}\Test\Unit\Model\{{ entity.getNameSingular()|camel|ucfirst }}\Executor;

use PHPUnit\Framework\TestCase;
use {{ module.getNamespace() }}\{{ module.getModuleName() }}\Api\{{ entity.getNameSingular()|camel|ucfirst }}RepositoryInterface;
use {{ module.getNamespace() }}\{{ module.getModuleName() }}\Api\Data\{{ entity.getNameSingular()|camel|ucfirst }}Interface;
use {{ module.getNamespace() }}\{{ module.getModuleName() }}\Model\{{ entity.getNameSingular()|camel|ucfirst }}\Executor\Delete;

class DeleteTest extends TestCase
{
    /**
     * @covers \{{ module.getNamespace() }}\{{ module.getModuleName() }}\Model\{{ entity.getNameSingular()|camel|ucfirst }}\Executor\Delete::execute()
     */
    public function testExecute()
    {
        /** @var {{ entity.getNameSingular()|camel|ucfirst }}RepositoryInterface | \PHPUnit_Framework_MockObject_MockObject ${{ entity.getNameSingular()|camel }}Repository */
        ${{ entity.getNameSingular()|camel }}Repository = $this->createMock({{ entity.getNameSingular()|camel|ucfirst }}RepositoryInterface::class);
        ${{ entity.getNameSingular()|camel }}Repository->expects($this->once())->method('deleteById');
        /** @var {{ entity.getNameSingular()|camel|ucfirst }}Interface | \PHPUnit_Framework_MockObject_MockObject ${{ entity.getNameSingular()|camel }} */
        ${{ entity.getNameSingular()|camel }} = $this->createMock({{ entity.getNameSingular()|camel|ucfirst }}Interface::class);
        $delete = new Delete(${{ entity.getNameSingular()|camel }}Repository);
        $delete->execute(${{ entity.getNameSingular()|camel }}->getId());
    }
}
