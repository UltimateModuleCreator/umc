<?xml version="1.0"?>{{ module.getFormattedLicense('xml')|raw }}
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
{% for entity in module.getEntities() %}
    <!--[+] define the ui config for "{{ entity.getNameSingular() }}" entity -->
    <virtualType name="{{ entity.getVirtualType('UiConfig') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Ui\EntityUiConfig">
        <arguments>
            <argument name="interface" xsi:type="string">\{{ entity.getInterface() }}</argument>
            <argument name="data" xsi:type="array">
                <item name="name_attribute" xsi:type="string">{{ entity.getNameAttribute().getCode() }}</item><!-- this is the attribute / field name that represents your entity -->
                <item name="labels" xsi:type="array">
                    <item name="new" xsi:type="string" translatable="true">Add New {{ entity.getLabelSingular() }}</item>
                    <item name="back" xsi:type="string" translatable="true">Back to list</item>
                    <item name="save" xsi:type="string" translatable="true">Save {{ entity.getLabelSingular() }}</item>
                    <item name="delete" xsi:type="string" translatable="true">Delete {{ entity.getLabelSingular() }}</item>
                    <item name="delete_message" xsi:type="string" translatable="true">Are you sure you want to delete {{ entity.getLabelSingular() }}?</item>
                </item>
                <item name="save" xsi:type="array">
                    <!-- uncomment lines below to remove the "Save and close" and "Save and duplicate" buttons -->
                    <!--<item name="allow_close" xsi:type="boolean">false</item>-->
                    <!--<item name="allow_duplicate" xsi:type="boolean">false</item>-->
                </item>
                <item name="list" xsi:type="array">
                    <item name="page_title" xsi:type="string" translatable="true">{{ entity.getLabelPlural() }}</item>
                </item>
                <item name="messages" xsi:type="array">
                    <item name="delete" xsi:type="array">
                        <item name="success" xsi:type="string" translatable="true">{{ entity.getLabelSingular() }} successfully deleted</item>
                        <item name="missing_entity" xsi:type="string" translatable="true">Couldn't find {{ entity.getLabelSingular() }} to delete</item>
                        <item name="error" xsi:type="string" translatable="true">There was a problem deleting the {{ entity.getLabelSingular() }}</item>
                    </item>
                    <item name="save" xsi:type="array">
                        <item name="success" xsi:type="string" translatable="true">{{ entity.getLabelSingular() }} successfully saved</item>
                        <item name="error" xsi:type="string" translatable="true">There was a problem saving the {{ entity.getLabelSingular() }}</item>
                        <item name="duplicate" xsi:type="string" translatable="true">{{ entity.getLabelSingular() }} duplicated successfully</item>
                    </item>
                    <item name="mass_delete" xsi:type="array">
                        <item name="success" xsi:type="string" translatable="true">%1 {{ entity.getLabelPlural() }} were successfully deleted</item>
                        <item name="error" xsi:type="string" translatable="true">There was a problem deleting the {{ entity.getLabelSingular() }}</item>
                    </item>
                </item>
            </argument>
        </arguments>
    </virtualType>
    <!--[-] define the ui config for "{{ entity.getNameSingular() }}" entity -->
    <!--[+] configure the grid actions column  for "{{ entity.getNameSingular() }}" entity-->
    <virtualType name="{{ entity.getVirtualType('GridActions') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Ui\Component\Listing\ActionsColumn">
        <arguments>
            <argument name="uiConfig" xsi:type="object">{{ entity.getVirtualType('UiConfig') }}</argument>
        </arguments>
    </virtualType>
    <!--[-] configure the grid actions column  for "{{ entity.getNameSingular() }}" entity-->
    <!--[+] configure admin controllers to use the ui entity config for "{{ entity.getNameSingular() }}" -->
    <type name="{{ entity.getAdminController('Index') }}">
        <arguments>
            <argument name="uiConfig" xsi:type="object">{{ entity.getVirtualType('UiConfig') }}</argument>
        </arguments>
    </type>
    <type name="{{ entity.getAdminController('Edit') }}">
        <arguments>
            <argument name="uiConfig" xsi:type="object">{{ entity.getVirtualType('UiConfig') }}</argument>
            <argument name="entityUiManager" xsi:type="object">{{ entity.getModel('UiManager') }}</argument>
        </arguments>
    </type>
    <type name="{{ entity.getAdminController('Save') }}">
        <arguments>
            <argument name="entityUiManager" xsi:type="object">{{ entity.getModel('UiManager') }}</argument>
            <argument name="dataProcessor" xsi:type="object">{{ entity.getSaveDataProcessor() }}</argument>
            <argument name="uiConfig" xsi:type="object">{{ entity.getVirtualType('UiConfig') }}</argument>
        </arguments>
    </type>
    <type name="{{ entity.getAdminController('InlineEdit') }}">
        <arguments>
            <argument name="entityUiManager" xsi:type="object">{{ entity.getModel('UiManager') }}</argument>
            <argument name="dataProcessor" xsi:type="object">{{ entity.getSaveDataProcessor() }}</argument>
            <argument name="uiConfig" xsi:type="object">{{ entity.getVirtualType('UiConfig') }}</argument>
        </arguments>
    </type>
    <type name="{{ entity.getAdminController('Delete') }}">
        <arguments>
            <argument name="uiConfig" xsi:type="object">{{ entity.getVirtualType('UiConfig') }}</argument>
            <argument name="uiManager" xsi:type="object">{{ entity.getModel('UiManager') }}</argument>
        </arguments>
    </type>
    <type name="{{ entity.getAdminController('MassDelete') }}">
        <arguments>
            <argument name="uiConfig" xsi:type="object">{{ entity.getVirtualType('UiConfig') }}</argument>
            <argument name="uiManager" xsi:type="object">{{ entity.getModel('UiManager') }}</argument>
            <argument name="collectionProvider" xsi:type="object">{{ entity.getModel('UiCollectionProvider') }}</argument>
        </arguments>
    </type>
{%  if entity.hasAttributeType('image') %}
    <type name="{{ entity.getAdminController('Image\Upload') }}">
        <arguments>
            <argument name="uploader" xsi:type="object">{{ entity.getVirtualType('ImageUploader') }}</argument>
        </arguments>
    </type>
    <virtualType name="{{ entity.getVirtualType('ImageUploader') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Model\Uploader">
        <arguments>
            <argument name="baseTmpPath" xsi:type="string">{{ entity.getUploadFolder('image', true) }}</argument>
            <argument name="basePath" xsi:type="string">{{ entity.getUploadFolder('image') }}</argument>
            <argument name="allowedExtensions" xsi:type="array">
                <item name="jpg" xsi:type="string">jpg</item>
                <item name="jpeg" xsi:type="string">jpeg</item>
                <item name="gif" xsi:type="string">gif</item>
                <item name="png" xsi:type="string">png</item>
            </argument>
        </arguments>
    </virtualType>
{% endif %}
{%  if entity.hasAttributeType('file') %}
    <type name="{{ entity.getAdminController('File\Upload') }}">
        <arguments>
            <argument name="uploader" xsi:type="object">{{ entity.getVirtualType('FileUploader') }}</argument>
        </arguments>
    </type>
    <virtualType name="{{ entity.getVirtualType('FileUploader') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Model\Uploader">
        <arguments>
            <argument name="baseTmpPath" xsi:type="string">{{ entity.getUploadFolder('file', true) }}</argument>
            <argument name="basePath" xsi:type="string">{{ entity.getUploadFolder('file') }}</argument>
            <argument name="allowedExtensions" xsi:type="array" />
        </arguments>
    </virtualType>
{% endif %}
{% if entity.hasDateDataProcessor() %}
    <virtualType name="{{ entity.getVirtualType('SaveDateProcessor') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Ui\SaveDataProcessor\Date">
        <arguments>
            <argument name="fields" xsi:type="array">
{% for attribute in entity.getAttributesWithType('date') %}
                <item name="{{ attribute.getCode() }}" xsi:type="string">{{ attribute.getCode() }}</item>
{% endfor %}
            </argument>
        </arguments>
    </virtualType>
{% endif %}
{% if entity.hasSerializedDataProcessor() %}
    <virtualType name="{{ entity.getVirtualType('SaveDynamicRowsProcessor') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Ui\SaveDataProcessor\DynamicRows">
        <arguments>
            <argument name="fields" xsi:type="array">
                {% for attribute in entity.getSerializedAttributes() %}
                    <item name="{{ attribute.getCode() }}" xsi:type="string">{{ attribute.getCode() }}</item>
                {% endfor %}
            </argument>
        </arguments>
    </virtualType>
{% endif %}
{% if entity.hasMultipleAttributes() %}
    <virtualType name="{{ entity.getVirtualType('SaveMultiselectProcessor') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Ui\SaveDataProcessor\Multiselect">
        <arguments>
            <argument name="fields" xsi:type="array">
{% for attribute in entity.getMultipleAttributes() %}
                <item name="{{ attribute.getCode() }}" xsi:type="string">{{ attribute.getCode() }}</item>
{% endfor %}
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="{{ entity.getVirtualType('FormMultiselectModifier') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Ui\Form\DataModifier\Multiselect">
        <arguments>
            <argument name="fields" xsi:type="array">
{% for attribute in entity.getMultipleAttributes() %}
                <item name="{{ attribute.getCode() }}" xsi:type="string">{{ attribute.getCode() }}</item>
{% endfor %}
            </argument>
        </arguments>
    </virtualType>
{% endif %}
{%  if entity.hasImageAttributes() %}
    <virtualType name="{{ entity.getVirtualType('SaveImageProcessor') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Ui\SaveDataProcessor\Upload">
        <arguments>
            <argument name="fileInfo" xsi:type="object">{{ entity.getVirtualType('ImageInfo') }}</argument>
            <argument name="uploader" xsi:type="object">{{ entity.getVirtualType('ImageUploader') }}</argument>
            <argument name="fields" xsi:type="array">
{% for attribute in entity.getImageAttributes() %}
                <item name="{{ attribute.getCode() }}" xsi:type="string">{{ attribute.getCode() }}</item>
{% endfor %}
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="{{ entity.getVirtualType('UiFormImageModifier') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Ui\Form\DataModifier\Upload">
        <arguments>
            <argument name="uploader" xsi:type="object">{{ entity.getVirtualType('ImageUploader') }}</argument>
            <argument name="fileInfo" xsi:type="object">{{ entity.getVirtualType('ImageInfo') }}</argument>
            <argument name="fields" xsi:type="array">
{% for attribute in entity.getImageAttributes() %}
                    <item name="{{ attribute.getCode() }}" xsi:type="string">{{ attribute.getCode() }}</item>
{% endfor %}
            </argument>
        </arguments>
    </virtualType>
{% endif %}
{%  if entity.hasFileAttributes() %}
    <virtualType name="{{ entity.getVirtualType('SaveFileProcessor') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Ui\SaveDataProcessor\Upload">
        <arguments>
            <argument name="fileInfo" xsi:type="object">{{ entity.getVirtualType('FileInfo') }}</argument>
            <argument name="uploader" xsi:type="object">{{ entity.getVirtualType('FileUploader') }}</argument>
            <argument name="fields" xsi:type="array">
{% for attribute in entity.getFileAttributes() %}
                    <item name="{{ attribute.getCode() }}" xsi:type="string">{{ attribute.getCode() }}</item>
{% endfor %}
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="{{ entity.getVirtualType('UiFormFileModifier') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Ui\Form\DataModifier\Upload">
        <arguments>
            <argument name="uploader" xsi:type="object">{{ entity.getVirtualType('FileUploader') }}</argument>
            <argument name="fileInfo" xsi:type="object">{{ entity.getVirtualType('FileInfo') }}</argument>
            <argument name="fields" xsi:type="array">
{% for attribute in entity.getImageAttributes() %}
                    <item name="{{ attribute.getCode() }}" xsi:type="string">{{ attribute.getCode() }}</item>
{% endfor %}
            </argument>
        </arguments>
    </virtualType>
{% endif %}
    <!--[-] configure admin controllers to use the ui entity config for "{{ entity.getNameSingular() }}" -->
{% if entity.hasDataProcessor() %}
    <virtualType name="{{ entity.getVirtualType('SaveDataProcessor') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Ui\SaveDataProcessor\CompositeProcessor">
        <arguments>
            <argument name="modifiers" xsi:type="array">
{% if entity.hasDateDataProcessor() %}
                <item name="date" xsi:type="object">{{ entity.getVirtualType('SaveDateProcessor') }}</item>
{% endif %}
{% if entity.hasMultipleAttributes() %}
                <item name="multiselect" xsi:type="object">{{ entity.getVirtualType('SaveMultiselectProcessor') }}</item>
{% endif %}
{% if entity.hasImageAttributes() %}
                <item name="image" xsi:type="object">{{ entity.getVirtualType('SaveImageProcessor') }}</item>
{% endif %}
{% if entity.hasFileAttributes() %}
                <item name="file" xsi:type="object">{{ entity.getVirtualType('SaveFileProcessor') }}</item>
{% endif %}
{% if entity.hasSerializedDataProcessor() %}
                <item name="dynamicRows" xsi:type="object">{{ entity.getVirtualType('SaveDynamicRowsProcessor') }}</item>
{% endif %}
            </argument>
        </arguments>
    </virtualType>
    <!--[+] form button configuration for '{{ entity.getNameSingular }}' -->
    <virtualType name="{{ entity.getVirtualType('ButtonBack') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Block\Adminhtml\Button\Back">
        <arguments>
            <argument name="uiConfig" xsi:type="object">{{ entity.getVirtualType('UiConfig') }}</argument>
        </arguments>
    </virtualType>
    <virtualType name="{{ entity.getVirtualType('ButtonSave') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Block\Adminhtml\Button\Save">
        <arguments>
            <argument name="uiConfig" xsi:type="object">{{ entity.getVirtualType('UiConfig') }}</argument>
        </arguments>
    </virtualType>
    <virtualType name="{{ entity.getVirtualType('ButtonDelete') }}" type="{{ module.getUmcCrudNamespace() }}\{{ module.getUmcModuleName() }}\Block\Adminhtml\Button\Delete">
        <arguments>
            <argument name="uiConfig" xsi:type="object">{{ entity.getVirtualType('UiConfig') }}</argument>
            <argument name="entityUiManager" xsi:type="object">{{ entity.getModel('UiManager') }}</argument>
        </arguments>
    </virtualType>
    <!--[-] form button configuration for 'something' -->
{% endif %}
{% endfor %}
{% if module.hasSearchableEntities() %}
    <type name="Magento\Backend\Block\GlobalSearch">
        <arguments>
            <argument name="entityResources" xsi:type="array">
{% for entity in module.getSearchableEntities() %}
                <item name="{{ module.getMenuText() }} {{ entity.getLabelPlural() }}" xsi:type="string">{{ module.getNamespace() }}_{{ module.getModuleName() }}::{{ module.getModuleName()|lower }}_{{ entity.getNameSingular()|snake }}</item>
{% endfor %}
            </argument>
            <argument name="entityPaths" xsi:type="array">
{% for entity in module.getSearchableEntities() %}
                <item name="{{ module.getMenuText() }} {{ entity.getLabelPlural() }}" xsi:type="string">{{ module.getNamespace()|lower }}_{{ module.getModuleName()|lower }}/{{ entity.getNameSingular() }}/index</item>
{% endfor %}
            </argument>
        </arguments>
    </type>
{% endif %}
</config>
