<?xml version="1.0"?>{{ module.getFormattedLicense('xml')|raw }}
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
{% for entity in module.getEntities() %}
    <preference for="{{ module.getNamespace() }}\{{module.getModuleName() }}\Api\{{ entity.getNameSingular()|ucfirst }}RepositoryInterface" type="{{ module.getNamespace() }}\{{module.getModuleName() }}\Model\{{ entity.getNameSingular()|ucfirst }}Repository"/>
    <preference for="{{ module.getNamespace() }}\{{module.getModuleName() }}\Api\Data\{{ entity.getNameSingular()|ucfirst }}Interface" type="{{ module.getNamespace() }}\{{module.getModuleName() }}\Model\{{ entity.getNameSingular()|ucfirst }}"/>
    <preference for="{{ module.getNamespace() }}\{{module.getModuleName() }}\Api\Data\{{ entity.getNameSingular()|ucfirst }}SearchResultInterface" type="Magento\Framework\Api\SearchResults"/>
{% endfor %}
{% if module.hasSearchableEntities() %}
    <type name="Magento\Backend\Controller\Adminhtml\Index\GlobalSearch">
        <arguments>
            <argument name="searchModules" xsi:type="array">
{% for entity in module.getSearchableEntities() %}
                <item name="{{ module.getNamespace()|snake }}_{{module.getModuleName()|snake }}_{{ entity.getNameSingular()|snake }}" xsi:type="array">
                    <item name="class" xsi:type="string">{{ module.getNamespace() }}\{{module.getModuleName() }}\Model\Search\{{ entity.getNameSingular()|ucfirst }}</item>
                    <item name="acl" xsi:type="string">{{ module.getNamespace() }}\{{module.getModuleName() }}::{{module.getModuleName()|snake }}_{{ entity.getNameSingular()|snake }}</item>
                </item>
{% endfor %}
            </argument>
        </arguments>
    </type>
{% endif %}
    <type name="Magento\Framework\View\Element\UiComponent\DataProvider\CollectionFactory">
        <arguments>
            <argument name="collections" xsi:type="array">
{% for entity in module.getEntities() %}
                <item name="{{ module.getNamespace()|snake }}_{{module.getModuleName()|camel|lower }}_{{ entity.getNameSingular()|camel|lower }}_listing_data_source" xsi:type="string">{{ module.getNamespace() }}{{module.getModuleName() }}{{ entity.getNameSingular()|ucfirst }}GridCollection</item>
{% endfor %}
            </argument>
        </arguments>
    </type>
{% for entity in module.getEntities() %}
    <type name="{{ module.getNamespace() }}\{{module.getModuleName() }}\Model\ResourceModel\{{ entity.getNameSingular()|ucfirst }}\Collection">
        <arguments>
            <argument name="model" xsi:type="string">{{ module.getNamespace() }}\{{module.getModuleName() }}\Model\{{ entity.getNameSingular()|ucfirst }}</argument>
            <argument name="resourceModel" xsi:type="string">{{ module.getNamespace() }}\{{module.getModuleName() }}\Model\ResourceModel\{{ entity.getNameSingular()|ucfirst }}</argument>
            <argument name="idFieldName" xsi:type="string">{{ entity.getNameSingular()|snake }}_id</argument>
            <argument name="eventPrefix" xsi:type="string">{{ module.getNamespace()|snake }}_{{module.getModuleName()|snake }}_{{ entity.getNameSingular()|snake }}_collection</argument>
            <argument name="eventObject" xsi:type="string">{{ entity.getNameSingular()|snake }}_collection</argument>
        </arguments>
    </type>
    <virtualType name="{{ module.getNamespace() }}{{module.getModuleName() }}{{ entity.getNameSingular()|ucfirst }}GridCollection" type="{{ module.getNamespace() }}\{{module.getModuleName() }}\Model\ResourceModel\{{ entity.getNameSingular()|ucfirst }}\Collection">
        <arguments>
            <argument name="model" xsi:type="string">Magento\Framework\View\Element\UiComponent\DataProvider\Document</argument>
            <argument name="resourceModel" xsi:type="string">{{ module.getNamespace() }}\{{module.getModuleName() }}\Model\ResourceModel\{{ entity.getNameSingular()|ucfirst }}</argument>
            <argument name="idFieldName" xsi:type="string">{{ entity.getNameSingular()|snake }}_id</argument>
            <argument name="eventPrefix" xsi:type="string">{{ module.getNamespace()|snake }}_{{module.getModuleName()|snake }}_{{ entity.getNameSingular()|snake }}_collection</argument>
            <argument name="eventObject" xsi:type="string">{{ entity.getNameSingular()|snake }}_collection</argument>
        </arguments>
    </virtualType>
{% if entity.hasAttributeType('image') %}
    <virtualType name="{{ module.getNamespace() }}{{ module.getModuleName() }}{{ entity.getNameSingular()|ucfirst }}ImageUploader" type="{{ module.getNamespace() }}\{{ module.getModuleName() }}\Model\Uploader">
        <arguments>
            <argument name="baseTmpPath" xsi:type="const">{{ module.getNamespace() }}\{{ module.getModuleName() }}\Model\UploadPath::{{ entity.getNameSingular()|snake|upper }}_IMAGE_TMP_PATH</argument>
            <argument name="basePath" xsi:type="const">{{ module.getNamespace() }}\{{ module.getModuleName() }}\Model\UploadPath::{{ entity.getNameSingular()|snake|upper }}_IMAGE_PATH</argument>
            <argument name="allowedExtensions" xsi:type="array">
                <item name="jpg" xsi:type="string">jpg</item>
                <item name="jpeg" xsi:type="string">jpeg</item>
                <item name="gif" xsi:type="string">gif</item>
                <item name="png" xsi:type="string">png</item>
            </argument>
        </arguments>
    </virtualType>
    <type name="{{ module.getNamespace() }}\{{ module.getModuleName() }}\Controller\Adminhtml\{{ entity.getNameSingular()|ucfirst }}\Image\Upload">
        <arguments>
            <argument name="uploader" xsi:type="object">{{ module.getNamespace() }}{{ module.getModuleName() }}{{ entity.getNameSingular()|ucfirst }}ImageUploader</argument>
            <argument name="aclResource" xsi:type="string">{{ module.getNamespace() }}_{{ module.getModuleName() }}::{{ module.getModuleName()|snake }}_{{ entity.getNameSingular()|snake }}</argument>
        </arguments>
    </type>
{% endif %}
{% if entity.hasAttributeType('file') %}
    <virtualType name="{{ module.getNamespace() }}{{ module.getModuleName() }}{{ entity.getNameSingular()|ucfirst }}FileUploader" type="{{ module.getNamespace() }}\{{ module.getModuleName() }}\Model\Uploader">
        <arguments>
            <argument name="baseTmpPath" xsi:type="const">{{ module.getNamespace() }}\{{ module.getModuleName() }}\Model\UploadPath::{{ entity.getNameSingular()|snake|upper }}_FILE_TMP_PATH</argument>
            <argument name="basePath" xsi:type="const">{{ module.getNamespace() }}\{{ module.getModuleName() }}\Model\UploadPath::{{ entity.getNameSingular()|snake|upper }}_FILE_PATH</argument>
            <argument name="allowedExtensions" xsi:type="array"/>
        </arguments>
    </virtualType>
    <type name="{{ module.getNamespace() }}\{{ module.getModuleName() }}\Controller\Adminhtml\{{ entity.getNameSingular()|ucfirst }}\File\Upload">
        <arguments>
            <argument name="uploader" xsi:type="object">{{ module.getNamespace() }}{{ module.getModuleName() }}{{ entity.getNameSingular()|ucfirst }}FileUploader</argument>
            <argument name="aclResource" xsi:type="string">{{ module.getNamespace() }}_{{ module.getModuleName() }}::{{ module.getModuleName()|snake }}_{{ entity.getNameSingular()|snake }}</argument>
        </arguments>
    </type>
{% endif %}
{% if entity.hasAttributeType('image') or entity.hasAttributeType('file')%}
    <type name="{{ module.getNamespace() }}\{{ module.getModuleName() }}\Model\UploaderPool">
        <arguments>
{% if entity.hasAttributeType('image') or entity.hasAttributeType('file') %}
            <argument name="uploaders" xsi:type="array">
{% if entity.hasAttributeType('image') %}
                <item name="image" xsi:type="object">{{ module.getNamespace() }}{{ module.getModuleName() }}{{ entity.getNameSingular()|ucfirst }}ImageUploader</item>
{% endif %}
{% if entity.hasAttributeType('file') %}
                <item name="file" xsi:type="object">{{ module.getNamespace() }}{{ module.getModuleName() }}{{ entity.getNameSingular()|ucfirst }}FileUploader</item>
{% endif %}
            </argument>
{% endif %}
        </arguments>
    </type>
{% endif %}
{% if entity.getAttributesWithTypeConfig('has_options')|length and entity.hasFrontend() %}
    <type name="{{ module.getNamespace() }}\{{ module.getModuleName() }}\Model\{{ entity.getNameSingular()|camel|ucfirst }}">
        <arguments>
            <argument name="optionProviders" xsi:type="array">
{% for attribute in entity.getAttributesWithTypeConfig('has_options') %}
                <item name="{{ attribute.getCode() }}" xsi:type="object">{{ attribute.getTypeInstance().getSourceModel() }}</item>
{% endfor %}
            </argument>
        </arguments>
    </type>
{% endif %}
{% if entity.hasAttributeType('image') and (entity.getFrontendView() or entity.getFrontendList()) %}
    <virtualType name="{{ module.getNamespace() }}{{ module.getModuleName }}{{ entity.getNameSingular()|camel|ucfirst }}ImageModel">
        <arguments>
            <argument name="uploader" xsi:type="object">{{ module.getNamespace() }}{{ module.getModuleName() }}{{ entity.getNameSingular()|ucfirst }}ImageUploader</argument>
        </arguments>
    </virtualType>
    <virtualType name="{{ module.getNamespace() }}{{ module.getModuleName }}Block{{ entity.getNameSingular()|camel|ucfirst }}ImageBuilder" type="{{ module.getNamespace() }}\{{ module.getModuleName }}\Block\ImageBuilder">
        <arguments>
            <argument name="entityCode" xsi:type="string">{{ entity.getNameSingular()|snake }}</argument>
            <argument name="uploader" xsi:type="object">{{ module.getNamespace() }}{{ module.getModuleName() }}{{ entity.getNameSingular()|ucfirst }}ImageUploader</argument>
        </arguments>
    </virtualType>
{% if entity.getFrontendView()  and entity.hasAttributeType('image') %}
    <type name="{{ module.getNamespace() }}\{{ module.getModuleName }}\Block\{{ entity.getNameSingular()|camel|ucfirst }}\View{{ entity.getNameSingular()|camel|ucfirst }}">
        <arguments>
            <argument name="imageBuilder" xsi:type="object">{{ module.getNamespace() }}{{ module.getModuleName }}Block{{ entity.getNameSingular()|camel|ucfirst }}ImageBuilder</argument>
        </arguments>
    </type>
{% endif %}
{% if entity.getFrontendList() and entity.hasAttributeType('image') %}
    <type name="{{ module.getNamespace() }}\{{ module.getModuleName }}\Block\{{ entity.getNameSingular()|camel|ucfirst }}\List{{ entity.getNameSingular()|camel|ucfirst }}">
        <arguments>
            <argument name="imageBuilder" xsi:type="object">{{ module.getNamespace() }}{{ module.getModuleName }}Block{{ entity.getNameSingular()|camel|ucfirst }}ImageBuilder</argument>
        </arguments>
    </type>
{% endif %}
{% endif %}
{% endfor %}
{% if module.hasAttributeType('wysiwyg') and module.hasFrontend() %}
    <type name="{{ module.getNamespace() }}\{{module.getModuleName() }}\Model\Output">
        <arguments>
            <argument name="templateProcessor" xsi:type="object">Magento\Widget\Model\Template\Filter</argument>
        </arguments>
    </type>
{% endif %}
</config>
