<?php{{ module.getFormattedLicense('php') }}
namespace {{ module.getNamespace() }}\{{ module.getModuleName() }}\Controller\Adminhtml\{{ entity.getNameSingular()|ucfirst }};

use Magento\Framework\Controller\ResultFactory;
use Magento\Framework\Exception\NoSuchEntityException;
use Magento\Backend\App\Action;
use Magento\Backend\App\Action\Context;
use Magento\Framework\Registry;
use {{ module.getNamespace() }}\{{ module.getModuleName() }}\Api\{{ entity.getNameSingular()|ucfirst }}RepositoryInterface;

class Edit extends Action
{
    /**
     * @var {{ entity.getNameSingular()|ucfirst }}RepositoryInterface
     */
    private ${{ entity.getNameSingular()|camel }}Repository;
    /**
     * @var Registry
     */
    private $registry;

    /**
     * Edit constructor.
     * @param Context $context
     * @param {{ entity.getNameSingular()|ucfirst }}RepositoryInterface ${{ entity.getNameSingular()|camel }}Repository
     * @param Registry $registry
     */
    public function __construct(
        Context $context,
        {{ entity.getNameSingular()|ucfirst }}RepositoryInterface ${{ entity.getNameSingular()|camel }}Repository,
        Registry $registry
    ) {
        $this->{{ entity.getNameSingular()|camel }}Repository = ${{ entity.getNameSingular()|camel }}Repository;
        $this->registry = $registry;
        parent::__construct($context);
    }

    /**
     * get current {{ entity.getLabelSingular() }}
     *
     * @return null|\{{ module.getNamespace() }}\{{ module.getModuleName() }}\Api\Data\{{ entity.getNameSingular()|ucfirst }}Interface
     */
    private function init{{ entity.getNameSingular()|ucfirst }}()
    {
        ${{ entity.getNameSingular()|camel }}Id = $this->getRequest()->getParam('{{ entity.getNameSingular()|snake }}_id');
        try {
            ${{ entity.getNameSingular()|camel }} = $this->{{ entity.getNameSingular()|camel }}Repository->get(${{ entity.getNameSingular()|camel }}Id);
        } catch (NoSuchEntityException $e) {
            ${{ entity.getNameSingular()|camel }} = null;
        }
        $this->registry->register('current_{{ entity.getNameSingular()|snake }}', ${{ entity.getNameSingular()|camel }});
        return ${{ entity.getNameSingular()|camel }};
    }

    /**
     * Edit or create {{ entity.getLabelSingular() }}
     *
     * @return \Magento\Backend\Model\View\Result\Page
     */
    public function execute()
    {
        ${{ entity.getNameSingular()|camel }} = $this->init{{ entity.getNameSingular()|camel|ucfirst }}();
        /** @var \Magento\Backend\Model\View\Result\Page $resultPage */
        $resultPage = $this->resultFactory->create(ResultFactory::TYPE_PAGE);
        $resultPage->setActiveMenu('{{ module.getNamespace() }}_{{ module.getModuleName() }}::{{ module.getModuleName()|camel|lower }}_{{ entity.getNameSingular()|snake }}');
        $resultPage->getConfig()->getTitle()->prepend(__('{{ entity.getLabelPlural() }}'));

        if (${{ entity.getNameSingular()|camel }} === null) {
            $resultPage->getConfig()->getTitle()->prepend(__('New {{ entity.getLabelSingular() }}'));
        } else {
            $resultPage->getConfig()->getTitle()->prepend(${{ entity.getNameSingular()|camel }}->get{{ entity.getNameAttribute().getCode()|camel|ucfirst }}());
        }
        return $resultPage;
    }
}
