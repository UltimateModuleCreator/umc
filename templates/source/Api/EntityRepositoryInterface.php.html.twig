<?php{{ module.getFormattedLicense('php') }}
namespace {{ module.getNamespace() }}\{{ module.getModuleName() }}\Api;

use {{ module.getNamespace() }}\{{ module.getModuleName() }}\Api\Data\{{ entity.getNameSingular()|ucfirst }}Interface;
use Magento\Framework\Api\SearchCriteriaInterface;

interface {{ entity.getNameSingular()|ucfirst }}RepositoryInterface
{
    /**
     * @param {{ entity.getNameSingular()|ucfirst }}Interface ${{ entity.getNameSingular() }}
     * @return {{ entity.getNameSingular()|ucfirst }}Interface
     */
    public function save({{ entity.getNameSingular()|ucfirst }}Interface ${{ entity.getNameSingular() }});

    /**
     * @param $id
     * @return {{ entity.getNameSingular()|ucfirst }}Interface
     * @throws \Magento\Framework\Exception\NoSuchEntityException
     */
    public function get($id);

    /**
     * @param \Magento\Framework\Api\SearchCriteriaInterface $searchCriteria
     * @return \{{ module.getNamespace() }}\{{ module.getModuleName() }}\Api\Data\{{ entity.getNameSingular()|ucfirst }}SearchResultInterface
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    public function getList(SearchCriteriaInterface $searchCriteria);

    /**
     * @param {{ entity.getNameSingular()|ucfirst }}Interface ${{ entity.getNameSingular() }}
     * @return bool true on success
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    public function delete({{ entity.getNameSingular()|ucfirst }}Interface ${{ entity.getNameSingular() }});

    /**
     * @param int ${{ entity.getNameSingular() }}Id
     * @return bool true on success
     * @throws \Magento\Framework\Exception\NoSuchEntityException
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    public function deleteById(${{ entity.getNameSingular() }}Id);

    /**
     * clear caches instances
     * @return void
     */
    public function clear();
}
