{% if (entity.isSearch()) %}
<?php{{ formatLicense(module, 'php')|raw }}
declare(strict_types=1);

namespace {{ module.getNamespace() }}\{{ module.getModuleName() }}\Model\Search;

use Magento\Framework\DataObject;
use Magento\Backend\Helper\Data;
use {{ module.getNamespace() }}\{{ module.getModuleName() }}\Model\ResourceModel\{{ entity.getNameSingular()|camel|ucfirst }}\CollectionFactory;

/**
 * @api
 */
class {{ entity.getNameSingular()|camel|ucfirst }} extends DataObject
{
    /**
     * Adminhtml data
     *
     * @var Data
     */
    private $adminhtmlData;

    /**
     * @var CollectionFactory
     */
    private $collectionFactory;

    /**
     * @param CollectionFactory $collectionFactory
     * @param Data $adminhtmlData
     */
    public function __construct(
        CollectionFactory $collectionFactory,
        Data $adminhtmlData
    ) {
        $this->collectionFactory = $collectionFactory;
        $this->adminhtmlData = $adminhtmlData;
    }

    /**
     * Load search results
     *
     * @return $this
     */
    public function load()
    {
        $result = [];
        if (!$this->hasStart() || !$this->hasLimit() || !$this->hasQuery()) {
            $this->setResults($result);
            return $this;
        }

        $query = $this->getQuery();
        $collection = $this->collectionFactory->create()
            ->addFieldToFilter('{{ entity.getNameAttribute().getCode() }}', ['like' => '%' . $query . '%'])
            ->setCurPage($this->getStart())
            ->setPageSize($this->getLimit())
            ->load();
        $result[] = [
            'id' => '{{ entity.getNameSingular()|snake }}0',
            'type' => '',
            'name' => __('"%1" in {{ entity.getLabelSingular() }}', $query),
            'description' => '',
            'url' => $this->adminhtmlData->getUrl(
                '{{ entity.getAdminRoute('index') }}',
                ['_query' => "search=" . $query]
            ),
        ];
        foreach ($collection as $item) {
            $result[] = [
                'id' => '{{ entity.getNameSingular()|snake }}' . $item->getId(),
                'type' => __('{{ entity.getLabelSingular() }}'),
                'name' => __('{{ entity.getLabelSingular() }} %1', $item->get{{ entity.getNameAttribute().getCode()|camel|ucfirst }}()),
                'description' => __('{{ entity.getLabelSingular() }} %1', $item->get{{ entity.getNameAttribute().getCode()|camel|ucfirst }}()),
                'url' => $this->adminhtmlData->getUrl(
                    '{{ entity.getAdminRoute('edit') }}',
                    ['{{ entity.getPk() }}' => $item->getId()]
                ),
            ];
        }
        $this->setResults($result);
        return $this;
    }
}
{% endif %}
