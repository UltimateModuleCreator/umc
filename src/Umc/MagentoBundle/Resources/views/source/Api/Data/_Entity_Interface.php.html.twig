<?php{{ formatLicense(module, 'php')|raw }}
declare(strict_types=1);

namespace {{ module.getNamespace() }}\{{ module.getModuleName() }}\Api\Data;

use Magento\Framework\Api\ExtensibleDataInterface;

/**
 * @api
 */
interface {{ entity.getNameSingular()|camel|ucfirst }}Interface extends ExtensibleDataInterface
{
    public const {{ entity.getNameSingular()|snake|upper }}_ID = '{{ entity.getPk() }}';
{% for attribute in entity.getAttributes() %}
    public const {{ attribute.getCode()|upper }} = '{{ attribute.getCode() }}';
{% endfor %}
{% if entity.isStore() %}
    public const STORE_ID = 'store_id';
{% endif %}
{% if entity.isSeo() %}
    public const META_TITLE = 'meta_title';
    public const META_DESCRIPTION = 'meta_description';
    public const META_KEYWORDS = 'meta_keywords';
{% endif %}
{% if entity.isFrontend() %}
    public const IS_ACTIVE = 'is_active';
    public const STATUS_ENABLED = 1;
    public const STATUS_DISABLED = 0;
{% endif %}
{% for relation in entity.getParentRelations() %}
    public const {{ relation.getRelatedEntityPk(entity)|upper }} = '{{ relation.getRelatedEntityPk(entity) }}';
{% endfor %}

    /**
     * @param int $id
     * @return {{ entity.getNameSingular()|camel|ucfirst }}Interface
     */
    public function setId($id);

    /**
     * @return int
     */
    public function getId();

    /**
     * @param int $id
     * @return {{ entity.getNameSingular()|camel|ucfirst }}Interface
     */
    public function set{{ entity.getPk()|camel|ucfirst }}($id);

    /**
     * @return int
     */
    public function get{{ entity.getPk()|camel|ucfirst }}();
{% for relation in entity.getParentRelations() %}

    /**
     * @param int ${{ relation.getRelatedEntityPk(entity)|camel }}
     * @return {{ entity.getNameSingular()|camel|ucfirst }}Interface
     */
    public function set{{ relation.getRelatedEntityPk(entity)|camel|ucfirst }}(${{ relation.getRelatedEntityPk(entity)|camel }});

    /**
     * @return int
     */
    public function get{{ relation.getRelatedEntityPk(entity)|camel|ucfirst }}();
{% endfor %}
{% for attribute in entity.getAttributes() %}
{{ attribute.getTypeInstance().renderTemplate('interface', {extraVars: extraVars})|raw }}
{% endfor %}
{% if entity.isStore() %}
    /**
     * @param int[] $store
     * @return {{ entity.getNameSingular()|camel|ucfirst }}Interface
     */
    public function setStoreId($store);

    /**
     * @return int[]
     */
    public function getStoreId();

{% endif %}
{% if entity.isSeo() %}
    /**
     * @param string $metaTitle
     * @return {{ entity.getNameSingular()|camel|ucfirst }}Interface
     */
    public function setMetaTitle($metaTitle);

    /**
     * @return string
     */
    public function getMetaTitle();

    /**
     * @param string $metaDescription
     * @return {{ entity.getNameSingular()|camel|ucfirst }}Interface
     */
    public function setMetaDescription($metaDescription);

    /**
     * @return string
     */
    public function getMetaDescription();

    /**
     * @param string $metaKeywords
     * @return {{ entity.getNameSingular()|camel|ucfirst }}Interface
     */
    public function setMetaKeywords($metaKeywords);

    /**
     * @return string
     */
    public function getMetaKeywords();

{% endif %}
{% if entity.isFrontend() %}
    /**
     * @param int $isActive
     * @return {{ entity.getNameSingular()|camel|ucfirst }}Interface
     */
    public function setIsActive($isActive);

    /**
     * @return int
     */
    public function getIsActive();
{% endif %}
}
